buildscript {
    ext {
        springBootVersion = '2.4.1'
    }
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    }
}

allprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'camp.nextstep.edu'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        runtimeOnly 'com.h2database:h2'

        testImplementation 'io.rest-assured:rest-assured:3.3.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}

dependencies {
    implementation 'org.flywaydb:flyway-core'

    implementation project(':common')
    implementation project(':product')
    implementation project(':menu')
    implementation project(':order')

    testCompile project(':common').sourceSets.test.output
    testCompile project(':product').sourceSets.test.output
    testCompile project(':menu').sourceSets.test.output
    testCompile project(':order').sourceSets.test.output
}

project(':common') {
    dependencies {
    }
}

project(':product') {
    dependencies {
        implementation project(':common')
        testCompile project(':common').sourceSets.test.output
    }
}

project(':menu') {
    dependencies {
        implementation project(':common')
        implementation project(':product')
        testCompile project(':common').sourceSets.test.output
        testCompile project(':product').sourceSets.test.output
    }
}

project(':order') {
    dependencies {
        implementation project(':common')
        implementation project(':product')
        implementation project(':menu')
        testCompile project(':common').sourceSets.test.output
        testCompile project(':product').sourceSets.test.output
        testCompile project(':menu').sourceSets.test.output
    }
}